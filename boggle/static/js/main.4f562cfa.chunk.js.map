{"version":3,"sources":["modules/boggle-react/context/index.js","modules/boggle/web-socket/settings.js","modules/boggle/actions/index.js","modules/boggle/index.js","modules/boggle/web-socket/index.js","modules/boggle-react/components/page/base-page.js","modules/boggle-react/components/page/page-content.js","modules/boggle-react/components/page/button.js","modules/boggle-react/components/page/hour-glass.js","modules/boggle-react/components/game/host-join-choice.js","modules/boggle-react/components/page/gif.js","modules/boggle-react/components/game/room.js","modules/boggle-react/components/page/text-field.js","modules/boggle-react/helpers.js","modules/boggle-react/components/game/join.js","modules/boggle-react/components/game/letter.js","modules/boggle-react/components/game/board.js","modules/boggle-react/components/game/timer.js","modules/boggle-react/components/game/word-list.js","modules/boggle-react/components/page/loader.js","modules/boggle-react/components/page/blocker.js","modules/boggle-react/components/game/boggle-board-game.js","modules/boggle-react/components/page/disconnected.js","modules/boggle-react/components/game/settings.js","modules/boggle-react/hoc/with-redirect-if-no-session.js","modules/boggle-react/components/game/results.js","modules/boggle-react/components/game/finished.js","modules/boggle-react/components/scores/index.js","modules/boggle-react/components/game/index.js","modules/boggle-react/index.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","settings","joinSession","sessionID","action","options","createSession","checkWord","word","startGame","selectedLetters","positions","finishGame","getScores","WebSocketManager","onMessage","onOpen","onClose","_this","this","Object","classCallCheck","websocket","WebSocket","onopen","onclose","onmessage","evt","JSON","parse","data","actions","entries","pureActions","forEach","entry","send","stringify","apply","arguments","styled","div","_templateObject","Container","page_content_templateObject","Content","_templateObject2","PageContent","_ref","children","react_default","a","createElement","StyledButton","Button","button_templateObject","page_button","props","assign","variant","color","Spinner","hour_glass_templateObject","Sand","hour_glass_templateObject2","hour_glass","HostJoin","context","history","push","react","index_es","gutterBottom","container","spacing","item","xs","onClick","Component","contextType","BoggleContext","withRouter","random","Math","floor","length","Leave","Waiting","Secret","Lose","Win","Draw","Gif","width","src","concat","Room","readyToPlay","gif","text_field","margin","arrayContainsPoint","x","some","b","y","pointsTouch","disX","disY","sqrt","getS","Join","state","gameId","onJoin","toLowerCase","_this2","autoFocus","label","fullWidth","window","innerWidth","onChange","e","setState","target","value","direction","justify","style","marginTop","letter_templateObject","board_templateObject","abc","Board","getCurrentY","i","current","interval","setInterval","clearInterval","_this3","board","selected","board_Container","height","slice","map","row","key","selectedItem","disabled","letter","onSelect","Timer","timeLeft","getSecondsLeft","round","Date","endTime","timer","onFinish","marginBottom","max","getWordGrid","guessedWords","goodWords","reverse","guessed","goodWord","find","points","WordList","_this$context","playerType","pointsOpponent","currentPoints","currentTurn","fullHeight","maxHeight","overflowY","overflowX","loader","CircularProgress_default","blocker_templateObject","possibleConstructorReturn","getPrototypeOf","call","pos","clearLetters","setSelected","prevPoints","opponentDisconnected","gameStarted","yourTurn","join","blocker","maxWidth","console","log","game_board","wordBreak","word_list","totalRounds","playTime","handleChange","defineProperty","_this$state","isHost","InputProps","inputProps","min","type","withRedirectIfNoSession","Comp","WithRedirectIfNoSession","_React$Component","_getPrototypeOf2","_len","args","Array","_key","checkSession","inherits","createClass","Results","getAction","currentRound","checkRedirect","gameFinshed","_this$context2","Finished","tie","win","previousRounds","filter","scores","score","host","player","Game","react_router_dom","basename","react_router","path","exact","component","HostJoinChoice","WaitRoom","JoinRoom","BoggleBoardGame","Settings","Disconnected","Scores","BoggleProvider","initialState","connected","joinGame","boggle","Boggle","Provider","objectSpread","base_page","page_content","game","App","boggle_react","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f562cfa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default React.createContext({})\r\n","export default {\r\n  // url: 'ws:localhost:1337'\r\n  url: 'ws:/boggle-backend-prod.herokuapp.com'\r\n}\r\n","\r\nexport const joinSession = sessionID => ({\r\n  action: 'joinRoom',\r\n  options: {\r\n    sessionID\r\n  }\r\n})\r\n\r\nexport const createSession = () => ({\r\n  action: 'createRoom'\r\n})\r\n\r\nexport const checkWord = word => ({\r\n  action: 'checkWord',\r\n  options: {\r\n    word\r\n  }\r\n})\r\n\r\nexport const startGame = () => ({\r\n  action: 'startGame'\r\n})\r\n\r\nexport const selectedLetters = positions => ({\r\n  action: 'selectedLetters',\r\n  options: {\r\n    positions\r\n  }\r\n})\r\n\r\nexport const finishGame = () => ({\r\n  action: 'finishGame'\r\n})\r\n\r\nexport const getScores = () => ({\r\n  action: 'getScores'\r\n})\r\n","import WebSocketManager from './web-socket'\r\n\r\nexport default WebSocketManager\r\n","import settings from './settings'\r\n\r\nimport * as pureActions from '../actions'\r\n\r\nclass WebSocketManager {\r\n  constructor (onMessage, onOpen, onClose) {\r\n    this.websocket = new WebSocket(settings.url)\r\n\r\n    this.websocket.onopen = onOpen\r\n    this.websocket.onclose = onClose\r\n\r\n    this.websocket.onmessage = evt => {\r\n      onMessage(JSON.parse(evt.data))\r\n    }\r\n\r\n    this.actions = {}\r\n\r\n    Object.entries(pureActions).forEach(entry => {\r\n      this.actions[entry[0]] = (...params) =>\r\n        this.websocket.send(\r\n          JSON.stringify(entry[1](...params))\r\n        )\r\n    })\r\n  }\r\n}\r\n\r\nexport default WebSocketManager\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n\r\n    color: #fff;\r\n    background: linear-gradient(-45deg, #EE7752, #E73C7E, #23A6D5, #23D5AB);\r\n    background-size: 400% 400%;\r\n    animation: Gradient 40s ease infinite;\r\n\r\n    @keyframes Gradient {\r\n      0% {\r\n        background-position: 0% 50%\r\n      }\r\n      50% {\r\n        background-position: 100% 50%\r\n      }\r\n      100% {\r\n        background-position: 0% 50%\r\n      }\r\n    }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    text-align:center;\r\n    margin-top: 1rem;\r\n`\r\n\r\nconst Content = styled.div`\r\n    display: inline-block;\r\n    max-width: 92%;\r\n    margin: 0 auto;\r\n`\r\n\r\nconst PageContent = ({ children }) => <Container>\r\n  <Content>\r\n    {children}\r\n  </Content>\r\n</Container>\r\n\r\nPageContent.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default PageContent\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst StyledButton = styled(Button)`\r\n    text-transform: none !important;\r\n    span {\r\n        font-size: large;\r\n    }\r\n`\r\n\r\nexport default props => <StyledButton variant='contained' color='primary' {...props} />\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst Spinner = styled.div`\r\n width: 70px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  background-color: #7de3f5;\r\n  margin: 40px auto;\r\n  position: relative;\r\n  overflow: hidden;\r\n  -webkit-animation: rotateGlass 4s infinite ease-in-out;\r\n  \r\n  &:before {\r\n    content: \"\";\r\n    width: 0; \r\n    height: 0; \r\n    display: block;\r\n    position: absolute; \r\n    z-index: 30;\r\n    border-top: 50px solid transparent;\r\n    border-bottom: 50px solid transparent;\r\n    border-left: 30px solid transparent;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    width: 0; \r\n    height: 0; \r\n    right: 0;\r\n    display: block;\r\n    position: absolute; \r\n    z-index: 30;\r\n    border-top: 50px solid transparent;\r\n    border-bottom: 50px solid transparent;\r\n    border-right: 30px solid transparent;\r\n  }\r\n\r\n    @keyframes rotateGlass {\r\n        40% {\r\n            -webkit-transform: rotate(0deg);\r\n        }\r\n        50% {\r\n            -webkit-transform: rotate(180deg);\r\n        }\r\n        90% {\r\n            -webkit-transform: rotate(180deg);\r\n        }\r\n        100% {\r\n            -webkit-transform: rotate(0deg);\r\n        }\r\n    }\r\n`\r\n\r\nconst Sand = styled.div`\r\n    &:before {\r\n        content: \"\";\r\n        width: 70px;\r\n\r\n        background: linear-gradient(-45deg, #EE7752, #E73C7E, #23A6D5, #23D5AB);\r\n        background-size: 400% 400%;\r\n        display: block;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 50%;\r\n        z-index: 10;\r\n        animation: dropsand 4s infinite ease-in-out, Gradient 10s ease infinite;\r\n    }\r\n    \r\n    &:after {\r\n        content: \"\";\r\n        width: 0; \r\n        height: 0; \r\n        display: block;\r\n        position: absolute; \r\n        border-left: 0px solid transparent;\r\n        border-right: 70px solid transparent;\r\n        border-top: 100px solid rgba(255,255,255, 0.4);\r\n        z-index: 20;\r\n        }\r\n\r\n    @keyframes Gradient {\r\n        0% {\r\n            background-position: 0% 50%\r\n        }\r\n        50% {\r\n            background-position: 100% 50%\r\n        }\r\n        100% {\r\n            background-position: 0% 50%\r\n        }\r\n    }\r\n\r\n    @keyframes dropsand {\r\n        0% { \r\n            bottom: 50%; \r\n        }\r\n        \r\n        35% {\r\n            bottom: 0%;\r\n            top: 50%;\r\n        }\r\n        \r\n        50% {\r\n            bottom: 0%;\r\n            top: 50%;\r\n        }\r\n        \r\n        85% {\r\n            top: 0;\r\n            bottom: 50%; \r\n        }\r\n    }\r\n`\r\n\r\nexport default () => <Spinner><Sand /></Spinner>\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Button from '../page/button'\r\n\r\nimport BoggleContext from '../../context'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\nimport { withRouter } from 'react-router'\r\nimport HourGlass from '../page/hour-glass'\r\n\r\nclass HostJoin extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    componentDidUpdate () {\r\n      if (this.context.sessionID) {\r\n        this.props.history.push('/room')\r\n      }\r\n    }\r\n\r\n    render () {\r\n      const actions = this.context.actions\r\n      return (\r\n        <Fragment>\r\n          <Typography variant='headline' gutterBottom >Do you want to host or join a game?</Typography>\r\n          <HourGlass />\r\n          <Grid container spacing={8}>\r\n            <Grid item xs={12}>\r\n              <Button onClick={() => this.props.history.push('/scores')}>Score board</Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button onClick={() => actions.createSession()}>Host game</Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button onClick={() => this.props.history.push('/join')}>Join game</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nHostJoin.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRouter(HostJoin)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst random = xs => xs[Math.floor(Math.random() * xs.length)]\r\n\r\nexport const Leave = random(['s0FsE5TsEF8g8', 'ef0zYcOodmbTMQZjkU', 'RHS4uBLwvRNUA', '7DzlajZNY5D0I', '3XiQswSmbjBiU'])\r\n\r\nexport const Waiting = random(['LXHJRRjnviw7e', 'tXL4FHPSnVJ0A', 'A6YO96sBmr1te', 'bkcbX8SqTCXHG'])\r\n\r\nexport const Secret = random(['ejP8zPAorQPYs', '26FL7sQXG1oT6qBy0'])\r\n\r\nexport const Lose = random(['sRJ3wPAyIxICA', '3o7TKnrXco2SC0XM1q', 'gXhBZfzijya76', 'atbiDI1fXpYUU', 'rKj0oXtnMQNwY'])\r\n\r\nexport const Win = random(['4jc0C6sRsKcFO', 'b09xElu8in7Lq', '3fk9lvhoApWww', 'eHxnl41nTrY4w'])\r\n\r\nexport const Draw = random(['26gQZVvtZ6TR1EMlW'])\r\n\r\nconst Gif = props => <img width='100%' src={`https://media.giphy.com/media/${props.src}/giphy.gif`} />\r\n\r\nGif.propTypes = {\r\n  src: PropTypes.string\r\n}\r\n\r\nexport default Gif\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport Gif, { Waiting } from '../page/gif'\r\n\r\nclass Room extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    componentDidMount () {\r\n      if (!this.context.sessionID) {\r\n        this.props.history.push('/')\r\n      }\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      if (this.context.readyToPlay) {\r\n        this.props.history.push('/settings')\r\n      }\r\n    }\r\n\r\n    render () {\r\n      const { sessionID } = this.context\r\n      return (\r\n        <div>\r\n          <Typography variant='h2' gutterBottom >{sessionID}</Typography>\r\n          <Typography variant='headline' gutterBottom >Give this code to your friend, he knows what to do..</Typography>\r\n          <Gif src={Waiting} />\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nRoom.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRouter(Room)\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nexport default props => <TextField\r\n  margin='normal'\r\n  variant='outlined'\r\n  {...props}\r\n/>\r\n","export const pointsAreEqual = (a, b) => a.x === b.x && a.y === b.y\r\n\r\nexport const arrayContainsPoint = (xs, x) => xs.some(item => pointsAreEqual(item, x))\r\n\r\nexport const pointsTouch = (a, b) => {\r\n  const disX = a.x - b.x\r\n  const disY = a.y - b.y\r\n  const distance = Math.sqrt(disX * disX + disY * disY)\r\n  return distance < 2\r\n}\r\n\r\nexport const pointTouchesAny = (p, xs) => xs.some(item => pointsTouch(item, p))\r\n\r\nexport const getS = xs => xs === 1 ? '' : 's'\r\n\r\nexport const isMobile = () => window.innerWidth <= 500\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport TextField from '../page/text-field'\r\nimport Button from '../page/button'\r\nimport Gif, { Secret } from '../page/gif'\r\nimport { isMobile } from '../../helpers'\r\n\r\nclass Join extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    state = {\r\n      gameId: ''\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      if (this.context.readyToPlay) {\r\n        this.props.history.push('/settings')\r\n      }\r\n    }\r\n\r\n    onJoin = () => {\r\n      const { gameId } = this.state\r\n      const { actions } = this.context\r\n      if (gameId) {\r\n        actions.joinSession(gameId.toLowerCase())\r\n      }\r\n    }\r\n\r\n    render () {\r\n      const { gameId } = this.state\r\n      const { history } = this.props\r\n\r\n      return (\r\n        <Fragment>\r\n          <Typography variant='headline'>Ask your friend for a secret code..</Typography>\r\n          <Gif src={Secret} />\r\n          <TextField\r\n            autoFocus\r\n            label='Game id'\r\n            fullWidth={isMobile()}\r\n            onChange={e => this.setState({ gameId: e.target.value })}\r\n            value={gameId}\r\n          />\r\n          <Grid container direction='row' justify='flex-end' spacing={8} style={{ marginTop: 12 }}>\r\n            <Grid item>\r\n              <Button onClick={this.onJoin}>Join</Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={() => history.push('/')}>Back</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nJoin.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRouter(Join)\r\n","import styled from 'styled-components'\r\nimport Button from '../page/button'\r\n\r\nexport default styled(Button)`\r\n    min-width: 50px!important;\r\n    max-width: 50px;\r\n    margin-top: 5px;\r\n    \r\n    h1 {\r\n        color: #ffffff;\r\n    }\r\n\r\n    animation: spaceboots 0.2s;\r\n    transform-origin: 50% 50%;\r\n    animation-iteration-count: 3;\r\n    animation-timing-function: linear;\r\n\r\n    @keyframes spaceboots {\r\n        0% {\r\n            transform: translate(2px, 1px) rotate(0deg);\r\n        }\r\n        10% {\r\n            transform: translate(-1px, -2px) rotate(-1deg);\r\n        }\r\n        20% {\r\n            transform: translate(-3px, 0px) rotate(1deg);\r\n        }\r\n        30% {\r\n            transform: translate(0px, 2px) rotate(0deg);\r\n        }\r\n        40% {\r\n            transform: translate(1px, -1px) rotate(1deg);\r\n        }\r\n        50% {\r\n            transform: translate(-1px, 2px) rotate(-1deg);\r\n        }\r\n        60% {\r\n            transform: translate(-3px, 1px) rotate(0deg);\r\n        }\r\n        70% {\r\n            transform: translate(2px, 1px) rotate(-1deg);\r\n        }\r\n        80% {\r\n            transform: translate(-1px, -1px) rotate(1deg);\r\n        }\r\n        90% {\r\n            transform: translate(2px, 2px) rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: translate(1px, -2px) rotate(-1deg);\r\n        }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport Letter from './letter'\r\n\r\nimport { arrayContainsPoint, pointsTouch } from '../../helpers'\r\n\r\nconst Container = styled.div`\r\n    margin-top: 12px;\r\n    margin-bottom: 12px;\r\n    width: 300px;\r\n    margin:  0 auto;\r\n`\r\n\r\nconst RandomizeLetters = 30;\r\nconst abc = \"abcdefghijklmnopqrstuvwxyz\"\r\n\r\nclass Board extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    state = {\r\n      random: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.interval = setInterval(\r\n        () => this.setState({ random: this.state.random + 1 }),\r\n        100\r\n      )\r\n    }\r\n  \r\n    componentDidUpdate() {\r\n      if (this.state.random >= RandomizeLetters) {\r\n        clearInterval(this.interval)\r\n      }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      clearInterval(this.interval)\r\n    }\r\n\r\n    getCurrentY = (x, i) => {\r\n      let current = 0\r\n      while (i >= 5 && current <= x) {\r\n        current++\r\n        i -= 5\r\n      }\r\n      return i\r\n    }\r\n\r\n    render () {\r\n      const { board } = this.context\r\n      const { selected } = this.props\r\n      return (\r\n        <Container >\r\n              <div style={{ height: board.board.length * 50}}>\r\n            {\r\n              board.board.slice(0, this.state.random / 5).map((row, x) => (\r\n                <Grid container spacing={8} key={x}>\r\n                  {\r\n                  row.slice(0, this.getCurrentY(x, this.state.random))\r\n                  .map((item, y) => {\r\n                      const selectedItem = arrayContainsPoint(selected, { x, y })\r\n                      const disabled = selected.length > 0 && !selectedItem && !pointsTouch({ x, y }, selected[selected.length - 1])\r\n\r\n                      return <Grid item key={y}>\r\n                        <Letter\r\n                          color={selectedItem ? 'secondary' : 'primary'}\r\n                          onClick={() => this.props.onSelect({ x, y })}\r\n                          disabled={disabled}\r\n                              >\r\n                          <Typography variant='display1'>\r\n                          {this.state.random <\r\n                            RandomizeLetters -\r\n                              this.getCurrentY(x, this.state.random)\r\n                              ? abc[Math.floor(Math.random() * abc.length)]\r\n                              : item}\r\n                          </Typography>\r\n                        </Letter>\r\n                      </Grid>\r\n                      })\r\n                  }\r\n                </Grid>\r\n              ))       \r\n            }\r\n        \r\n          </div>\r\n        </Container>\r\n      )\r\n    }\r\n}\r\n\r\nBoard.propTypes = {\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.array\r\n}\r\n\r\nexport default Board\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nclass Timer extends React.Component {\r\n    state = {\r\n      timeLeft: 20\r\n    }\r\n\r\n    componentDidMount () {\r\n      this.timer = setInterval(() => this.setState({ timeLeft: this.getSecondsLeft() }), 200)\r\n    }\r\n\r\n    componentWillUnmount () {\r\n      clearInterval(this.timer)\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      if (this.state.timeLeft <= 0) {\r\n        this.props.onFinish()\r\n      }\r\n    }\r\n\r\n    getSecondsLeft = () => Math.round((new Date(this.props.endTime) - new Date()) / 1000)\r\n\r\n    render () {\r\n      const { timeLeft } = this.state\r\n      return (\r\n        <Typography variant='h4' style={{ marginBottom: 12 }}>{Math.max(timeLeft, 0)} seconds left</Typography>\r\n      )\r\n    }\r\n}\r\n\r\nTimer.propTypes = {\r\n  endTime: PropTypes.number,\r\n  onFinish: PropTypes.func\r\n}\r\n\r\nexport default Timer\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { Typography, Grid, Divider } from '@material-ui/core'\r\n\r\nimport { getS } from '../../helpers'\r\n\r\nexport const getWordGrid = (guessedWords, goodWords) => {\r\n  return guessedWords.slice().reverse().map(guessed => {\r\n    const goodWord = goodWords.find(item => item.word === guessed)\r\n    if (goodWord) {\r\n      return <Grid container spacing={8} key={guessed}>\r\n        <Grid item xs><Typography variant='display1' gutterBottom color='primary'>{goodWord.word}</Typography></Grid>\r\n        <Grid item xs><Typography variant='display1' gutterBottom >{goodWord.points} point{getS(goodWord.points)}</Typography></Grid>\r\n      </Grid>\r\n    } else {\r\n      return <Typography key={guessed} variant='display1' gutterBottom color='secondary' >{guessed}</Typography>\r\n    }\r\n  })\r\n}\r\n\r\nclass WordList extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    render () {\r\n      const { board, playerType, points, pointsOpponent } = this.context\r\n      const { guessedWords, goodWords } = board\r\n\r\n      const yourTurn = playerType === board.currentTurn\r\n      const currentPoints = yourTurn ? points : pointsOpponent\r\n\r\n      return (\r\n        <Fragment>\r\n          <Typography gutterBottom variant='h4'>{currentPoints} point{getS(currentPoints)}</Typography>\r\n          <Divider />\r\n          <div\r\n            style={\r\n                !this.props.fullHeight ? {\r\n                marginTop: 12,\r\n                maxHeight: 300,\r\n                overflowY: 'auto',\r\n                overflowX: 'hidden'\r\n            } : {}}\r\n                >\r\n            {\r\n                getWordGrid(guessedWords, goodWords)\r\n            }\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nWordList.propTypes = {\r\n  fullHeight: PropTypes.bool\r\n}\r\n\r\nexport default WordList\r\n","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nexport default props => <CircularProgress color='secondary' {...props} />\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 999;\r\n`\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\n\r\nimport Board from './board'\r\nimport Timer from './timer'\r\nimport WordList from './word-list'\r\n\r\nimport { arrayContainsPoint } from '../../helpers'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport Loader from '../page/loader'\r\nimport Button from '../page/button'\r\nimport Blocker from '../page/blocker'\r\n\r\nclass Join extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    constructor () {\r\n      super()\r\n      this.prevPoints = 0\r\n    }\r\n\r\n    state = {\r\n      gameId: '',\r\n      selected: [],\r\n      timeLeft: 20\r\n    }\r\n\r\n    componentDidMount () {\r\n      if (!this.context.board) {\r\n        this.props.history.push('/')\r\n      }\r\n      this.context.actions.selectedLetters([])\r\n      this.setState({ selected: [] })\r\n    }\r\n\r\n    onSelect = pos => {\r\n      let selected = []\r\n\r\n      if (this.state.selected.length === 0) {\r\n        selected = [pos]\r\n      } else if (arrayContainsPoint(this.state.selected, pos)) {\r\n        selected = this.state.selected.slice(0, this.state.selected.length - 1)\r\n      } else {\r\n        selected = this.state.selected.concat(pos)\r\n      }\r\n\r\n      this.context.actions.selectedLetters(selected)\r\n\r\n      this.setState({ selected })\r\n    }\r\n\r\n    clearLetters = () => {\r\n      this.context.actions.selectedLetters([])\r\n      this.setState({ selected: [] })\r\n    }\r\n\r\n    setSelected = selected => {\r\n      this.setState({ selected })\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      if (this.context.points !== this.prevPoints) {\r\n        this.prevPoints = this.context.points\r\n        this.setSelected([])\r\n      }\r\n      if (this.context.opponentDisconnected) {\r\n        this.props.history.push('/disconnected')\r\n      }\r\n      if (!this.context.gameStarted) {\r\n        this.props.history.push('/results')\r\n      }\r\n    }\r\n\r\n    checkWord = word => {\r\n      this.context.actions.checkWord(word)\r\n      this.clearLetters()\r\n    }\r\n\r\n    render () {\r\n      const { selected } = this.state\r\n      const { board, playerType } = this.context\r\n\r\n      if (!board) {\r\n        return <Loader />\r\n      }\r\n\r\n      const yourTurn = playerType === board.currentTurn\r\n      const endTime = board.endTime\r\n\r\n      const selectedLetters = !yourTurn ? this.context.selectedLetters : selected\r\n\r\n      const word = selectedLetters.map(item => board.board[item.x][item.y]).join('')\r\n\r\n      return (\r\n        <Fragment>\r\n          {\r\n            !yourTurn && <Blocker />\r\n          }\r\n          <Typography style={{ maxWidth: 310 }} variant='h4'>{yourTurn ? `It's your turn!` : `Please wait for your opponent..`}</Typography>\r\n\r\n          {\r\n            endTime && <Timer endTime={endTime} onFinish={console.log} />\r\n          }\r\n\r\n          <Board onSelect={this.onSelect} selected={selectedLetters} />\r\n\r\n          <Typography style={{ height: 50, wordBreak: 'break-all', margin: 8 }} variant='h3'>{word}</Typography>\r\n\r\n          {\r\n            yourTurn && <Grid container direction='row' justify='flex-end' spacing={8} style={{ marginBottom: 12 }}>\r\n              <Grid item>\r\n                <Button color='secondary' onClick={() => this.checkWord(word)}>Check</Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button onClick={this.clearLetters}>Clear</Button>\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n          <WordList />\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nJoin.propTypes = {\r\n  history: PropTypes.any\r\n}\r\n\r\nexport default withRouter(Join)\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\nimport { withRouter } from 'react-router'\r\nimport Button from './button'\r\n\r\nimport Gif, { Leave } from './gif'\r\n\r\nconst Disconnected = props => <Fragment>\r\n  <Typography variant='display2'>Sorry!</Typography>\r\n  <Typography variant='headline' gutterBottom>Your opponent disconnected..</Typography>\r\n  <Gif src={Leave} />\r\n  <Grid container direction='row' justify='flex-end' spacing={8}>\r\n    <Grid item>\r\n      <Button color='primary' onClick={() => props.history.push('/')}>Back</Button>\r\n    </Grid>\r\n  </Grid>\r\n</Fragment>\r\n\r\nDisconnected.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRouter(Disconnected)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\n\r\nimport Button from '../page/button'\r\nimport TextField from '../page/text-field'\r\n\r\nclass Room extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    componentDidMount () {\r\n      if (!this.context.sessionID || !this.context.readyToPlay) {\r\n        this.props.history.push('/')\r\n      }\r\n    }\r\n\r\n    state = {\r\n      totalRounds: this.context.totalRounds,\r\n      playTime: this.context.playTime\r\n    }\r\n\r\n    handleChange = (key, value) => {\r\n      this.setState({ [key]: value })\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      if (this.context.opponentDisconnected) {\r\n        this.props.history.push('/disconnected')\r\n      }\r\n      if (this.context.gameStarted) {\r\n        this.props.history.push('/game')\r\n      }\r\n    }\r\n\r\n    render () {\r\n      const { playerType } = this.context\r\n      const { totalRounds, playTime } = this.state\r\n\r\n      const isHost = playerType === 'host'\r\n\r\n      return (\r\n        <div>\r\n          <Typography variant='h2' gutterBottom >Game settings</Typography>\r\n          <TextField InputProps={{ inputProps: { min: 20, max: 120 } }} type='number' label='Round play time' value={playTime} onChange={(e) => this.handleChange('playTime', e.target.value)} />\r\n          <TextField InputProps={{ inputProps: { min: 1, max: 10 } }} type='number' label='Total rounds' value={totalRounds} onChange={(e) => this.handleChange('totalRounds', e.target.value)} />\r\n\r\n          {\r\n            isHost && <Grid container direction='row' justify='flex-end'>\r\n              <Grid item>\r\n                <Button onClick={this.context.actions.startGame}>Start</Button>\r\n              </Grid>\r\n            </Grid>\r\n            }\r\n\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nRoom.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRouter(Room)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../context'\r\n\r\nconst withRedirectIfNoSession = Comp => {\r\n  class WithRedirectIfNoSession extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    componentDidMount () {\r\n      this.checkSession()\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      this.checkSession()\r\n    }\r\n\r\n    checkSession = () => {\r\n      if (this.context.opponentDisconnected) {\r\n        this.props.history.push('/disconnected')\r\n      }\r\n      if (!this.context.sessionID) {\r\n        this.props.history.push('/')\r\n      }\r\n    }\r\n\r\n    render () {\r\n      return this.context.sessionID ? <Comp {...this.props} /> : null\r\n    }\r\n  }\r\n  WithRedirectIfNoSession.propTypes = {\r\n    history: PropTypes.object\r\n  }\r\n  return WithRedirectIfNoSession\r\n}\r\n\r\nexport default withRedirectIfNoSession\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\nimport Button from '../page/button'\r\n\r\nimport withRedirectIfNoSession from '../../hoc/with-redirect-if-no-session'\r\nimport WordList from './word-list'\r\n\r\nclass Results extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    getAction = () => {\r\n      const { board, actions } = this.context\r\n      if (board.currentRound < board.totalRounds || board.currentTurn === 'host') {\r\n        return <Button onClick={() => actions.startGame()}>My turn</Button>\r\n      } else {\r\n        return <Button onClick={this.finishGame}>Finish</Button>\r\n      }\r\n    }\r\n\r\n    finishGame = () => {\r\n      this.context.actions.finishGame()\r\n    }\r\n\r\n    checkRedirect = () => {\r\n      if (this.context.gameStarted) {\r\n        this.props.history.push('/game')\r\n      }\r\n      if (this.context.gameFinshed) {\r\n        this.props.history.push('/finish')\r\n      }\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      this.checkRedirect()\r\n    }\r\n\r\n    componentDidMount () {\r\n      this.checkRedirect()\r\n    }\r\n\r\n    render () {\r\n      const { playerType, board } = this.context\r\n\r\n      const yourTurn = playerType === board.currentTurn\r\n\r\n      return (\r\n        <Fragment>\r\n          <Typography variant='headline' gutterBottom >{yourTurn ? 'Your' : 'Your opponents'} results of round {board.currentRound}</Typography>\r\n          {\r\n            !yourTurn && <Grid container direction='row' justify='flex-end' spacing={8}>\r\n              <Grid item>\r\n                {\r\n                  this.getAction()\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n          <WordList fullHeight />\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nResults.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRedirectIfNoSession(withRouter(Results))\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\nimport Button from '../page/button'\r\n\r\nimport { withRouter } from 'react-router'\r\nimport { getWordGrid } from './word-list'\r\n\r\nimport withRedirectIfNoSession from '../../hoc/with-redirect-if-no-session'\r\nimport Gif, { Draw, Win, Lose } from '../page/gif'\r\n\r\nclass Finished extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    render () {\r\n      const { points, pointsOpponent, board, playerType } = this.context\r\n\r\n      const tie = points === pointsOpponent\r\n      const win = points > pointsOpponent\r\n\r\n      return (\r\n        <Fragment>\r\n          <Typography variant='display2' gutterBottom >{tie ? `It's a tie!` : win ? 'You have won!' : 'You have lost..'}</Typography>\r\n\r\n          <Typography variant='display1' gutterBottom >{points} points</Typography>\r\n\r\n          <Gif src={tie ? Draw : win ? Win : Lose} />\r\n\r\n          <Grid container spacing={8}>\r\n            {\r\n                board.previousRounds.filter(round => round.playerType === playerType).map(round => {\r\n                    getWordGrid(round.guessedWords, round.goodWords)\r\n                })\r\n            }\r\n          </Grid>\r\n\r\n          <Grid container direction='row' justify='flex-end' spacing={8} style={{ marginTop: 12 }}>\r\n            <Grid item>\r\n              <Button onClick={() => this.props.history.push('/scores')}>To score board</Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={() => this.props.history.push('/')}>Menu</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nFinished.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRedirectIfNoSession(withRouter(Finished))\r\n","import React, { Fragment } from 'react'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport { Typography, Grid, Divider } from '@material-ui/core'\r\n\r\nclass Room extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    componentDidMount () {\r\n      this.context.actions.getScores()\r\n    }\r\n\r\n    render () {\r\n      const { scores } = this.context\r\n      return (\r\n        <div>\r\n          {\r\n            scores && scores.map(score => <Fragment>\r\n              <Grid container spacing={8} style={{ marginTop: 12 }}>\r\n                <Grid item xs={12}>\r\n                  <Typography variant='headline' gutterBottom >Host: {score.host} points</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography variant='headline' gutterBottom >Player: {score.player} points</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider />\r\n            </Fragment>\r\n            )\r\n        }\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default withRouter(Room)\r\n","import React from 'react'\r\n\r\nimport HostJoinChoice from './host-join-choice'\r\nimport WaitRoom from './room'\r\nimport JoinRoom from './join'\r\nimport BoggleBoardGame from './boggle-board-game'\r\nimport Disconnected from '../page/disconnected'\r\nimport Settings from './settings'\r\nimport Results from './results'\r\nimport Finished from './finished'\r\nimport Scores from '../scores'\r\n\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Card, CardContent } from '@material-ui/core'\r\n\r\nclass Game extends React.Component {\r\n  render () {\r\n    return (\r\n      <Router basename='/boggle'>\r\n        <Card>\r\n          <CardContent>\r\n            <Route path='/' exact component={HostJoinChoice} />\r\n            <Route path='/room' exact component={WaitRoom} />\r\n            <Route path='/join' exact component={JoinRoom} />\r\n            <Route path='/game' exact component={BoggleBoardGame} />\r\n            <Route path='/settings' exact component={Settings} />\r\n            <Route path='/results' exact component={Results} />\r\n            <Route path='/finish' exact component={Finished} />\r\n            <Route path='/disconnected' exact component={Disconnected} />\r\n            <Route path='/scores' exact component={Scores} />\r\n          </CardContent>\r\n        </Card>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\r\n\r\nimport BoggleContext from './context'\r\nimport Boggle from '../boggle'\r\n\r\nimport BasePage from './components/page/base-page'\r\nimport PageContent from './components/page/page-content'\r\n\r\nimport Game from './components/game'\r\nimport Loader from './components/page/loader'\r\n\r\nclass BoggleProvider extends React.Component {\r\n  constructor () {\r\n    super()\r\n    this.boggle = {}\r\n  }\r\n\r\n    initialState = {\r\n      points: 0,\r\n      connected: false,\r\n      selectedLetters: [],\r\n      pointsOpponent: 0,\r\n      readyToPlay: false\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    componentDidMount () {\r\n      this.setState(this.initialState)\r\n      this.boggle = new Boggle(this.onMessage, () => this.setState({ connected: true }), console.log)\r\n    }\r\n\r\n    onMessage = data => {\r\n      this.setState(data)\r\n    }\r\n\r\n    joinGame = () => {\r\n      this.setState({\r\n        joinGame: true\r\n      })\r\n    }\r\n\r\n    render () {\r\n      const { connected } = this.state\r\n      return (\r\n        <BoggleContext.Provider value={{\r\n                ...this.state,\r\n                actions: this.boggle.actions\r\n            }}>\r\n          <BasePage>\r\n            <PageContent>\r\n              { !connected ? <Loader /> : <Game /> }\r\n            </PageContent>\r\n          </BasePage>\r\n        </BoggleContext.Provider>\r\n      )\r\n    }\r\n}\r\n\r\nexport default BoggleProvider\r\n","import React from 'react'\r\n\r\nimport Boggle from './modules/boggle-react'\r\n\r\n// window.onbeforeunload = function () {\r\n//   return 'the Game will be ended if you leave this page, are you sure?'\r\n// }\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <Boggle />\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}