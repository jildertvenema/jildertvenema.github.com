{"version":3,"sources":["files/kahoot.mp3","modules/boggle-react/context/index.js","modules/boggle/web-socket/settings.js","modules/boggle/actions/index.js","modules/boggle/index.js","modules/boggle/web-socket/index.js","modules/boggle-react/components/page/base-page.js","modules/boggle-react/components/page/page-content.js","modules/boggle-react/components/page/button.js","modules/boggle-react/components/page/hour-glass.js","modules/boggle-react/components/game/host-join-choice.js","modules/boggle-react/components/page/gif.js","modules/boggle-react/components/game/room.js","modules/boggle-react/components/page/text-field.js","modules/boggle-react/helpers.js","sound.js","modules/boggle-react/components/game/join.js","modules/boggle-react/components/game/letter.js","modules/boggle-react/components/game/board.js","modules/boggle-react/components/game/timer.js","modules/boggle-react/components/game/word-list.js","modules/boggle-react/components/page/loader.js","modules/boggle-react/components/page/blocker.js","modules/boggle-react/components/game/boggle-board-game.js","modules/boggle-react/components/page/disconnected.js","modules/boggle-react/components/game/settings.js","modules/boggle-react/hoc/with-redirect-if-no-session.js","modules/boggle-react/components/game/results.js","modules/boggle-react/components/game/finished.js","modules/boggle-react/components/scores/index.js","modules/boggle-react/components/game/index.js","modules/boggle-react/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","React","createContext","settings","joinSession","sessionID","action","options","createSession","createSinglePlayerSession","checkWord","word","startGame","selectedLetters","positions","finishGame","getScores","setName","name","WebSocketManager","onMessage","onOpen","onClose","_this","this","Object","classCallCheck","websocket","window","WebSocket","onopen","onclose","onmessage","evt","JSON","parse","data","actions","entries","pureActions","forEach","entry","send","stringify","apply","arguments","styled","div","_templateObject","Container","page_content_templateObject","Content","_templateObject2","PageContent","_ref","children","react_default","a","createElement","StyledButton","Button","button_templateObject","page_button","props","assign","variant","color","Spinner","hour_glass_templateObject","Sand","hour_glass_templateObject2","hour_glass","HostJoin","_this$context","context","board","console","log","singlePlayer","history","push","readyToPlay","resetContext","react","index_es","gutterBottom","container","spacing","item","xs","fullWidth","onClick","Component","contextType","BoggleContext","withRouter","random","Math","floor","length","Leave","Waiting","Secret","Lose","Win","Draw","Gif","width","src","concat","Room","gif","text_field","margin","arrayContainsPoint","x","findIndex","b","y","pointsTouch","disX","disY","sqrt","getS","isMobile","innerWidth","Sound","source","volume","loop","son","finish","stop","document","body","removeChild","start","setAttribute","appendChild","remove","init","Join","state","gameId","onJoin","_this$state","toLowerCase","Kahoot","_this2","_this$state2","autoFocus","label","onChange","e","setState","target","value","direction","justify","style","marginTop","letter_templateObject","board_templateObject","abc","Board","getCurrentY","i","current","interval","setInterval","onbeforeunload","clearInterval","undefined","_this3","selected","board_Container","height","slice","map","row","key","selectedItem","disabled","letter","onSelect","Timer","timeLeft","getSecondsLeft","round","Date","endTime","timer","onFinish","marginBottom","max","getWordGrid","guessedWords","goodWords","reverse","guessed","goodWord","find","points","WordList","playerType","pointsOpponent","currentPoints","currentTurn","fullHeight","maxHeight","overflowY","overflowX","loader","CircularProgress_default","blocker_templateObject","possibleConstructorReturn","getPrototypeOf","call","pos","index","clearLetters","setSelected","prevPoints","opponentDisconnected","gameStarted","opponentName","yourTurn","join","blocker","maxWidth","currentRound","game_board","wordBreak","word_list","totalRounds","playTime","handleChange","defineProperty","isHost","InputProps","inputProps","min","type","withRedirectIfNoSession","Comp","WithRedirectIfNoSession","_React$Component","_getPrototypeOf2","_len","args","Array","_key","checkSession","inherits","createClass","Results","getAction","checkRedirect","gameFinshed","_this$context2","Finished","tie","win","previousRounds","filter","getTopThree","scores","result","score","hostName","host","player","playerName","sort","sortedScores","float","fontWeight","textDecoration","Game","react_router_dom","basename","react_router","path","exact","component","HostJoinChoice","WaitRoom","JoinRoom","BoggleBoardGame","Settings","Disconnected","Scores","BoggleProvider","initialState","connected","getNewBoggleInstance","Boggle","joinGame","boggle","Provider","objectSpread","base_page","page_content","game","App","boggle_react","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e73f091.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kahoot.cf5776ef.mp3\";","import React from 'react'\r\n\r\nexport default React.createContext({})\r\n","export default {\r\n  // url: 'ws:localhost:1337'\r\n  url: 'ws:/boggle-backend-prod.herokuapp.com'\r\n}\r\n","\r\nexport const joinSession = sessionID => ({\r\n  action: 'joinRoom',\r\n  options: {\r\n    sessionID\r\n  }\r\n})\r\n\r\nexport const createSession = () => ({\r\n  action: 'createRoom'\r\n})\r\n\r\nexport const createSinglePlayerSession = () => ({\r\n  action: 'createSinglePlayerSession'\r\n})\r\n\r\nexport const checkWord = word => ({\r\n  action: 'checkWord',\r\n  options: {\r\n    word\r\n  }\r\n})\r\n\r\nexport const startGame = () => ({\r\n  action: 'startGame'\r\n})\r\n\r\nexport const selectedLetters = positions => ({\r\n  action: 'selectedLetters',\r\n  options: {\r\n    positions\r\n  }\r\n})\r\n\r\nexport const finishGame = () => ({\r\n  action: 'finishGame'\r\n})\r\n\r\nexport const getScores = () => ({\r\n  action: 'getScores'\r\n})\r\n\r\nexport const setName = name => ({\r\n  action: 'setName',\r\n  options: {\r\n    name\r\n  }\r\n})\r\n","import WebSocketManager from './web-socket'\r\n\r\nexport default WebSocketManager\r\n","import settings from './settings'\r\n\r\nimport * as pureActions from '../actions'\r\n\r\nclass WebSocketManager {\r\n  constructor (onMessage, onOpen, onClose) {\r\n    this.websocket = new window.WebSocket(settings.url)\r\n\r\n    this.websocket.onopen = onOpen\r\n    this.websocket.onclose = onClose\r\n\r\n    this.websocket.onmessage = evt => {\r\n      onMessage(JSON.parse(evt.data))\r\n    }\r\n\r\n    this.actions = {}\r\n\r\n    Object.entries(pureActions).forEach(entry => {\r\n      this.actions[entry[0]] = (...params) =>\r\n        this.websocket.send(\r\n          JSON.stringify(entry[1](...params))\r\n        )\r\n    })\r\n  }\r\n}\r\n\r\nexport default WebSocketManager\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    \r\n    height: 60px;\r\n    background: lighten(#e73c7e, 10%);\r\n    background-image: linear-gradient(to bottom, #e73c7e, rgba(0, 0, 0, 0));\r\n    transform-origin: 50% 48%;\r\n    border-bottom-left-radius: 43%;\r\n    border-bottom-right-radius: 43%;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    text-align:center;\r\n    margin-top: 1rem;\r\n`\r\n\r\nconst Content = styled.div`\r\n    display: inline-block;\r\n    max-width: 92%;\r\n    margin: 0 auto;\r\n`\r\n\r\nconst PageContent = ({ children }) => <Container>\r\n  <Content>\r\n    {children}\r\n  </Content>\r\n</Container>\r\n\r\nPageContent.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default PageContent\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst StyledButton = styled(Button)`\r\n    text-transform: none !important;\r\n    span {\r\n        font-size: large;\r\n    }\r\n`\r\n\r\nexport default props => <StyledButton variant='contained' color='primary' {...props} />\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst Spinner = styled.div`\r\n width: 70px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  background-color: #7de3f5;\r\n  margin: 40px auto;\r\n  position: relative;\r\n  overflow: hidden;\r\n  -webkit-animation: rotateGlass 4s infinite ease-in-out;\r\n  \r\n  &:before {\r\n    content: \"\";\r\n    width: 0; \r\n    height: 0; \r\n    display: block;\r\n    position: absolute; \r\n    z-index: 30;\r\n    border-top: 50px solid transparent;\r\n    border-bottom: 50px solid transparent;\r\n    border-left: 30px solid transparent;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    width: 0; \r\n    height: 0; \r\n    right: 0;\r\n    display: block;\r\n    position: absolute; \r\n    z-index: 30;\r\n    border-top: 50px solid transparent;\r\n    border-bottom: 50px solid transparent;\r\n    border-right: 30px solid transparent;\r\n  }\r\n\r\n    @keyframes rotateGlass {\r\n        40% {\r\n            -webkit-transform: rotate(0deg);\r\n        }\r\n        50% {\r\n            -webkit-transform: rotate(180deg);\r\n        }\r\n        90% {\r\n            -webkit-transform: rotate(180deg);\r\n        }\r\n        100% {\r\n            -webkit-transform: rotate(0deg);\r\n        }\r\n    }\r\n`\r\n\r\nconst Sand = styled.div`\r\n    &:before {\r\n        content: \"\";\r\n        width: 70px;\r\n\r\n        background: linear-gradient(-45deg, #EE7752, #E73C7E, #23A6D5, #23D5AB);\r\n        background-size: 400% 400%;\r\n        display: block;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 50%;\r\n        z-index: 10;\r\n        animation: dropsand 4s infinite ease-in-out, Gradient 10s ease infinite;\r\n    }\r\n    \r\n    &:after {\r\n        content: \"\";\r\n        width: 0; \r\n        height: 0; \r\n        display: block;\r\n        position: absolute; \r\n        border-left: 0px solid transparent;\r\n        border-right: 70px solid transparent;\r\n        border-top: 100px solid rgba(255,255,255, 0.4);\r\n        z-index: 20;\r\n        }\r\n\r\n    @keyframes Gradient {\r\n        0% {\r\n            background-position: 0% 50%\r\n        }\r\n        50% {\r\n            background-position: 100% 50%\r\n        }\r\n        100% {\r\n            background-position: 0% 50%\r\n        }\r\n    }\r\n\r\n    @keyframes dropsand {\r\n        0% { \r\n            bottom: 50%; \r\n        }\r\n        \r\n        35% {\r\n            bottom: 0%;\r\n            top: 50%;\r\n        }\r\n        \r\n        50% {\r\n            bottom: 0%;\r\n            top: 50%;\r\n        }\r\n        \r\n        85% {\r\n            top: 0;\r\n            bottom: 50%; \r\n        }\r\n    }\r\n`\r\n\r\nexport default () => <Spinner><Sand /></Spinner>\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Button from '../page/button'\r\n\r\nimport BoggleContext from '../../context'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\nimport { withRouter } from 'react-router'\r\nimport HourGlass from '../page/hour-glass'\r\n\r\nclass HostJoin extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    componentDidUpdate () {\r\n      const { board, sessionID } = this.context\r\n      console.log(this.context)\r\n      if (board && board.singlePlayer) {\r\n        this.props.history.push('/settings')\r\n      } else if (sessionID) {\r\n        this.props.history.push('/room')\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n       if (this.context.readyToPlay) {\r\n         this.context.resetContext()\r\n       }\r\n    }\r\n\r\n    render () {\r\n      const actions = this.context.actions\r\n      return (\r\n        <Fragment>\r\n          <Typography variant='headline' gutterBottom >Do you want to host or join a game?</Typography>\r\n          <HourGlass />\r\n          <Grid container spacing={8}>\r\n            <Grid item xs={6}>\r\n              <Button fullWidth onClick={() => actions.createSinglePlayerSession()}>Singleplayer</Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button fullWidth onClick={() => this.props.history.push('/scores')}>Scoreboard</Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button fullWidth onClick={() => actions.createSession()}>Host game</Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button fullWidth onClick={() => this.props.history.push('/join')}>Join game</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nHostJoin.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRouter(HostJoin)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst random = xs => xs[Math.floor(Math.random() * xs.length)]\r\n\r\nexport const Leave = random(['s0FsE5TsEF8g8', 'ef0zYcOodmbTMQZjkU', 'RHS4uBLwvRNUA', '7DzlajZNY5D0I', '3XiQswSmbjBiU'])\r\n\r\nexport const Waiting = random(['LXHJRRjnviw7e', 'tXL4FHPSnVJ0A', 'A6YO96sBmr1te', 'bkcbX8SqTCXHG'])\r\n\r\nexport const Secret = random(['ejP8zPAorQPYs', '26FL7sQXG1oT6qBy0'])\r\n\r\nexport const Lose = random(['sRJ3wPAyIxICA', '3o7TKnrXco2SC0XM1q', 'gXhBZfzijya76', 'atbiDI1fXpYUU', 'rKj0oXtnMQNwY'])\r\n\r\nexport const Win = random(['4jc0C6sRsKcFO', 'b09xElu8in7Lq', '3fk9lvhoApWww', 'eHxnl41nTrY4w'])\r\n\r\nexport const Draw = random(['26gQZVvtZ6TR1EMlW'])\r\n\r\nconst Gif = props => <img width='100%' src={`https://media.giphy.com/media/${props.src}/giphy.gif`} />\r\n\r\nGif.propTypes = {\r\n  src: PropTypes.string\r\n}\r\n\r\nexport default Gif\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport Gif, { Waiting } from '../page/gif'\r\n\r\nclass Room extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    componentDidMount () {\r\n      if (!this.context.sessionID) {\r\n        this.props.history.push('/')\r\n      }\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      if (this.context.readyToPlay) {\r\n        this.props.history.push('/settings')\r\n      }\r\n    }\r\n\r\n    render () {\r\n      const { sessionID } = this.context\r\n      return (\r\n        <div>\r\n          <Typography variant='h2' gutterBottom >{sessionID}</Typography>\r\n          <Typography variant='headline' gutterBottom >Give this code to your friend, he knows what to do..</Typography>\r\n          <Gif src={Waiting} />\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nRoom.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRouter(Room)\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nexport default props => <TextField\r\n  margin='normal'\r\n  variant='outlined'\r\n  {...props}\r\n/>\r\n","export const pointsAreEqual = (a, b) => a.x === b.x && a.y === b.y\r\n\r\nexport const arrayContainsPoint = (xs, x) => xs.findIndex(item => pointsAreEqual(item, x))\r\n\r\nexport const pointsTouch = (a, b) => {\r\n  const disX = a.x - b.x\r\n  const disY = a.y - b.y\r\n  const distance = Math.sqrt(disX * disX + disY * disY)\r\n  return distance < 2\r\n}\r\n\r\nexport const pointTouchesAny = (p, xs) => xs.some(item => pointsTouch(item, p))\r\n\r\nexport const getS = xs => xs === 1 ? '' : 's'\r\n\r\nexport const isMobile = () => window.innerWidth <= 500\r\n","// source: https://stackoverflow.com/a/11331200/4298200\r\nfunction Sound(source, volume, loop)\r\n{\r\n    this.source = source;\r\n    this.volume = volume;\r\n    this.loop = loop;\r\n    var son;\r\n    this.son = son;\r\n    this.finish = false;\r\n    this.stop = function()\r\n    {\r\n        document.body.removeChild(this.son);\r\n    }\r\n    this.start = function()\r\n    {\r\n        if (this.finish) return false;\r\n        this.son = document.createElement(\"embed\");\r\n        this.son.setAttribute(\"src\", this.source);\r\n        this.son.setAttribute(\"hidden\", \"true\");\r\n        this.son.setAttribute(\"volume\", this.volume);\r\n        this.son.setAttribute(\"autostart\", \"true\");\r\n        this.son.setAttribute(\"loop\", this.loop);\r\n        document.body.appendChild(this.son);\r\n    }\r\n    this.remove=function()\r\n    {\r\n        document.body.removeChild(this.son);\r\n        this.finish = true;\r\n    }\r\n    this.init = function(volume, loop)\r\n    {\r\n        this.finish = false;\r\n        this.volume = volume;\r\n        this.loop = loop;\r\n    }\r\n}\r\n\r\nexport default Sound\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport TextField from '../page/text-field'\r\nimport Button from '../page/button'\r\nimport Gif, { Secret } from '../page/gif'\r\nimport { isMobile } from '../../helpers'\r\n\r\nimport Kahoot from '../../../../files/kahoot.mp3'\r\nimport Sound from '../../../../sound'\r\n\r\nclass Join extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    state = {\r\n      gameId: '',\r\n      name: ''\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      if (this.context.readyToPlay) {\r\n        this.props.history.push('/settings')\r\n      }\r\n    }\r\n\r\n    onJoin = () => {\r\n      const { gameId, name } = this.state\r\n      const { actions } = this.context\r\n\r\n      if (gameId.toLowerCase() === 'kahoot') {\r\n        var music = new Sound(Kahoot, 100, true);\r\n        music.start();\r\n      }\r\n\r\n      // Set player name\r\n      actions.setName(name || 'Anonymous boggler')\r\n\r\n      if (gameId) {\r\n        actions.joinSession(gameId.toLowerCase())\r\n      }\r\n    }\r\n\r\n    render () {\r\n      const { gameId, name } = this.state\r\n      const { history } = this.props\r\n\r\n      return (\r\n        <Fragment>\r\n          <Typography variant='headline'>Ask your friend for a secret code..</Typography>\r\n          <Gif src={Secret} />\r\n          <TextField\r\n            autoFocus\r\n            label='Your name'\r\n            fullWidth={isMobile()}\r\n            onChange={e => this.setState({ name: e.target.value })}\r\n            value={name}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            label='Game id'\r\n            fullWidth={isMobile()}\r\n            onChange={e => this.setState({ gameId: e.target.value })}\r\n            value={gameId}\r\n          />\r\n          <Grid container direction='row' justify='flex-end' spacing={8} style={{ marginTop: 12 }}>\r\n            <Grid item>\r\n              <Button onClick={this.onJoin}>Join</Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={() => history.push('/')}>Back</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nJoin.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRouter(Join)\r\n","import styled from 'styled-components'\r\nimport Button from '../page/button'\r\n\r\nexport default styled(Button)`\r\n    min-width: 50px!important;\r\n    max-width: 50px;\r\n    margin-top: 5px;\r\n    \r\n    h1 {\r\n        color: #ffffff;\r\n    }\r\n\r\n    animation: spaceboots 0.2s;\r\n    transform-origin: 50% 50%;\r\n    animation-iteration-count: 3;\r\n    animation-timing-function: linear;\r\n\r\n    @keyframes spaceboots {\r\n        0% {\r\n            transform: translate(2px, 1px) rotate(0deg);\r\n        }\r\n        10% {\r\n            transform: translate(-1px, -2px) rotate(-1deg);\r\n        }\r\n        20% {\r\n            transform: translate(-3px, 0px) rotate(1deg);\r\n        }\r\n        30% {\r\n            transform: translate(0px, 2px) rotate(0deg);\r\n        }\r\n        40% {\r\n            transform: translate(1px, -1px) rotate(1deg);\r\n        }\r\n        50% {\r\n            transform: translate(-1px, 2px) rotate(-1deg);\r\n        }\r\n        60% {\r\n            transform: translate(-3px, 1px) rotate(0deg);\r\n        }\r\n        70% {\r\n            transform: translate(2px, 1px) rotate(-1deg);\r\n        }\r\n        80% {\r\n            transform: translate(-1px, -1px) rotate(1deg);\r\n        }\r\n        90% {\r\n            transform: translate(2px, 2px) rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: translate(1px, -2px) rotate(-1deg);\r\n        }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport Letter from './letter'\r\n\r\nimport { arrayContainsPoint, pointsTouch } from '../../helpers'\r\n\r\nconst Container = styled.div`\r\n    margin-top: 12px;\r\n    margin-bottom: 12px;\r\n    width: 100%;\r\n    margin:  0 auto;\r\n`\r\n\r\nconst RandomizeLetters = 30\r\nconst abc = 'abcdefghijklmnopqrstuvwxyz'\r\n\r\nclass Board extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    state = {\r\n      random: 0\r\n    }\r\n\r\n    componentDidMount () {\r\n      this.interval = setInterval(\r\n        () => this.setState({ random: this.state.random + 1 }),\r\n        100\r\n      )\r\n      window.onbeforeunload = function () {\r\n        return \"If you reload this page, the game will be stopped\"\r\n      }\r\n    }\r\n      \r\n\r\n    componentDidUpdate () {\r\n      if (this.state.random >= RandomizeLetters) {\r\n        clearInterval(this.interval)\r\n      }\r\n    }\r\n\r\n    componentWillUnmount () {\r\n      clearInterval(this.interval)\r\n\r\n      window.onbeforeunload = undefined\r\n    }\r\n\r\n    getCurrentY = (x, i) => {\r\n      let current = 0\r\n      while (i >= 5 && current <= x) {\r\n        current++\r\n        i -= 5\r\n      }\r\n      return i\r\n    }\r\n\r\n    render () {\r\n      const { board } = this.context\r\n      const { selected } = this.props\r\n      return (\r\n        <Container >\r\n          <div style={{ height: board.board.length * 50 }}>\r\n            {\r\n              board.board.slice(0, this.state.random / 5).map((row, x) => (\r\n                <Grid container spacing={8} key={x}>\r\n                  {\r\n                  row.slice(0, this.getCurrentY(x, this.state.random))\r\n                  .map((item, y) => {\r\n                      const selectedItem = arrayContainsPoint(selected, { x, y }) > -1\r\n                      const disabled = selected.length > 0 && !selectedItem && !pointsTouch({ x, y }, selected[selected.length - 1])\r\n\r\n                      return <Grid item key={x * board.board.length + y}>\r\n                        <Letter\r\n                          color={selectedItem ? 'secondary' : 'primary'}\r\n                          onClick={() => this.props.onSelect({ x, y })}\r\n                          disabled={disabled}\r\n                              >\r\n                          <Typography variant='display1'>\r\n                            {this.state.random <\r\n                            RandomizeLetters -\r\n                              this.getCurrentY(x, this.state.random)\r\n                              ? abc[Math.floor(Math.random() * abc.length)]\r\n                              : item}\r\n                          </Typography>\r\n                        </Letter>\r\n                      </Grid>\r\n                      })\r\n                  }\r\n                </Grid>\r\n              ))\r\n            }\r\n\r\n          </div>\r\n        </Container>\r\n      )\r\n    }\r\n}\r\n\r\nBoard.propTypes = {\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.array\r\n}\r\n\r\nexport default Board\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nclass Timer extends React.Component {\r\n    state = {\r\n      timeLeft: 20\r\n    }\r\n\r\n    componentDidMount () {\r\n      this.timer = setInterval(() => this.setState({ timeLeft: this.getSecondsLeft() }), 200)\r\n    }\r\n\r\n    componentWillUnmount () {\r\n      clearInterval(this.timer)\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      if (this.state.timeLeft <= 0) {\r\n        this.props.onFinish()\r\n      }\r\n    }\r\n\r\n    getSecondsLeft = () => Math.round((new Date(this.props.endTime) - new Date()) / 1000)\r\n\r\n    render () {\r\n      const { timeLeft } = this.state\r\n      return (\r\n        <Typography variant='h4' style={{ marginBottom: 12 }}>{Math.max(timeLeft, 0)} seconds left</Typography>\r\n      )\r\n    }\r\n}\r\n\r\nTimer.propTypes = {\r\n  endTime: PropTypes.number,\r\n  onFinish: PropTypes.func\r\n}\r\n\r\nexport default Timer\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { Typography, Grid, Divider } from '@material-ui/core'\r\n\r\nimport { getS } from '../../helpers'\r\n\r\nexport const getWordGrid = (guessedWords, goodWords) => {\r\n  return guessedWords.slice().reverse().map(guessed => {\r\n    const goodWord = goodWords.find(item => item.word === guessed)\r\n    if (goodWord) {\r\n      return <Grid container spacing={8} key={guessed}>\r\n        <Grid item xs><Typography variant='display1' gutterBottom color='primary'>{goodWord.word}</Typography></Grid>\r\n        <Grid item xs><Typography variant='display1' gutterBottom >{goodWord.points} point{getS(goodWord.points)}</Typography></Grid>\r\n      </Grid>\r\n    } else {\r\n      return <Typography key={guessed} variant='display1' gutterBottom color='secondary' >{guessed}</Typography>\r\n    }\r\n  })\r\n}\r\n\r\nclass WordList extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    render () {\r\n      const { board, playerType, points, pointsOpponent } = this.context\r\n      const { guessedWords, goodWords } = board\r\n\r\n      const yourTurn = playerType === board.currentTurn\r\n      const currentPoints = yourTurn ? points : pointsOpponent\r\n\r\n      return (\r\n        <Fragment>\r\n          <Typography gutterBottom variant='h4'>{currentPoints} point{getS(currentPoints)}</Typography>\r\n          <Divider />\r\n          <div\r\n            style={\r\n                !this.props.fullHeight ? {\r\n                marginTop: 12,\r\n                maxHeight: 300,\r\n                overflowY: 'auto',\r\n                overflowX: 'hidden'\r\n            } : {}}\r\n                >\r\n            {\r\n                getWordGrid(guessedWords, goodWords)\r\n            }\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nWordList.propTypes = {\r\n  fullHeight: PropTypes.bool\r\n}\r\n\r\nexport default WordList\r\n","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nexport default props => <CircularProgress color='secondary' {...props} />\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 999;\r\n`\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\n\r\nimport Board from './board'\r\nimport Timer from './timer'\r\nimport WordList from './word-list'\r\n\r\nimport { arrayContainsPoint } from '../../helpers'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport Loader from '../page/loader'\r\nimport Button from '../page/button'\r\nimport Blocker from '../page/blocker'\r\n\r\nclass Join extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    constructor () {\r\n      super()\r\n      this.prevPoints = 0\r\n    }\r\n\r\n    state = {\r\n      gameId: '',\r\n      selected: [],\r\n      timeLeft: 20\r\n    }\r\n\r\n    componentDidMount () {\r\n      if (!this.context.board) {\r\n        this.props.history.push('/')\r\n      }\r\n      this.context.actions.selectedLetters([])\r\n      this.setState({ selected: [] })\r\n    }\r\n\r\n    onSelect = pos => {\r\n      let selected = []\r\n\r\n      const index = arrayContainsPoint(this.state.selected, pos)\r\n\r\n      if (this.state.selected.length === 0) {\r\n        selected = [pos]\r\n      } else if (index > -1) {\r\n        if (index === 0) {\r\n          selected = []\r\n        } else {\r\n          selected = this.state.selected.slice(0, index)\r\n        }\r\n      } else {\r\n        selected = this.state.selected.concat(pos)\r\n      }\r\n\r\n      if (!this.context.board.singlePlayer) {\r\n        this.context.actions.selectedLetters(selected)\r\n      }\r\n\r\n      this.setState({ selected })\r\n    }\r\n\r\n    clearLetters = () => {\r\n      this.context.actions.selectedLetters([])\r\n      this.setState({ selected: [] })\r\n    }\r\n\r\n    setSelected = selected => {\r\n      this.setState({ selected })\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      if (this.context.points !== this.prevPoints) {\r\n        this.prevPoints = this.context.points\r\n        this.setSelected([])\r\n      }\r\n      if (this.context.opponentDisconnected) {\r\n        this.props.history.push('/disconnected')\r\n      }\r\n      // Round finished\r\n      if (!this.context.gameStarted) {\r\n        this.props.history.push('/results')\r\n      }\r\n    }\r\n\r\n    checkWord = word => {\r\n      this.context.actions.checkWord(word)\r\n      this.clearLetters()\r\n    }\r\n\r\n    render () {\r\n      const { selected } = this.state\r\n      const { board, playerType, opponentName } = this.context\r\n\r\n      if (!board) {\r\n        return <Loader />\r\n      }\r\n\r\n      const yourTurn = playerType === board.currentTurn\r\n      const endTime = board.endTime\r\n\r\n      const selectedLetters = !yourTurn ? this.context.selectedLetters : selected\r\n\r\n      const word = selectedLetters.map(item => board.board[item.x][item.y]).join('')\r\n\r\n      return (\r\n        <Fragment>\r\n          {\r\n            !yourTurn && <Blocker />\r\n          }\r\n          <Typography style={{ maxWidth: 310 }} variant='h4'>{yourTurn ? (board.singlePlayer ? `Round ${board.currentRound}!` : `It's your turn!`) : `Please wait for ${opponentName || 'your opponent'}..`}</Typography>\r\n\r\n          {\r\n            endTime && <Timer endTime={endTime} onFinish={console.log} />\r\n          }\r\n\r\n          <Board onSelect={this.onSelect} selected={selectedLetters} />\r\n\r\n          <Typography style={{ height: 50, wordBreak: 'break-all', margin: 8, marginTop: 40 }} variant='h3'>{word}</Typography>\r\n\r\n          {\r\n            yourTurn && <Grid container direction='row' justify='flex-end' spacing={8} style={{ marginBottom: 12 }}>\r\n              <Grid item>\r\n                <Button color='secondary' onClick={() => this.checkWord(word)}>Check</Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button onClick={this.clearLetters}>Clear</Button>\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n          <WordList />\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nJoin.propTypes = {\r\n  history: PropTypes.any\r\n}\r\n\r\nexport default withRouter(Join)\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\nimport { withRouter } from 'react-router'\r\nimport Button from './button'\r\n\r\nimport Gif, { Leave } from './gif'\r\n\r\nconst Disconnected = props => <Fragment>\r\n  <Typography variant='display2'>Sorry!</Typography>\r\n  <Typography variant='headline' gutterBottom>Your opponent disconnected..</Typography>\r\n  <Gif src={Leave} />\r\n  <Grid container direction='row' justify='flex-end' spacing={8}>\r\n    <Grid item>\r\n      <Button color='primary' onClick={() => props.history.push('/')}>Back</Button>\r\n    </Grid>\r\n  </Grid>\r\n</Fragment>\r\n\r\nDisconnected.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRouter(Disconnected)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\n\r\nimport Button from '../page/button'\r\nimport TextField from '../page/text-field'\r\nimport { isMobile } from '../../helpers'\r\n\r\nclass Room extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    componentDidMount () {\r\n      if (!this.context.sessionID || !this.context.readyToPlay) {\r\n        this.props.history.push('/')\r\n      }\r\n    }\r\n\r\n    state = {\r\n      totalRounds: this.context.totalRounds,\r\n      playTime: this.context.playTime,\r\n      name: ''\r\n    }\r\n\r\n    handleChange = (key, value) => {\r\n      this.setState({ [key]: value })\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      if (this.context.opponentDisconnected) {\r\n        this.props.history.push('/disconnected')\r\n      }\r\n      if (this.context.gameStarted) {\r\n        this.props.history.push('/game')\r\n      }\r\n    }\r\n\r\n    startGame = () => {\r\n      const { actions } = this.context\r\n      const { name } = this.state\r\n\r\n      actions.setName(name || 'Anonymous boggler')\r\n      actions.startGame()\r\n    }\r\n\r\n    render () {\r\n      const { playerType } = this.context\r\n      const { totalRounds, playTime, name } = this.state\r\n\r\n      const isHost = playerType === 'host'\r\n\r\n      return (\r\n        <div>\r\n          <Typography variant='h2' gutterBottom >Game settings</Typography>\r\n\r\n          {\r\n            isHost && <TextField\r\n              autoFocus\r\n              label='Your name'\r\n              fullWidth={isMobile()}\r\n              onChange={e => this.setState({ name: e.target.value })}\r\n              value={name}\r\n              />\r\n          }\r\n\r\n          <TextField fullWidth={isMobile()} disabled InputProps={{ inputProps: { min: 20, max: 120 } }} type='number' label='Round play time' value={playTime} onChange={(e) => this.handleChange('playTime', e.target.value)} />\r\n          <TextField fullWidth={isMobile()} disabled InputProps={{ inputProps: { min: 1, max: 10 } }} type='number' label='Total rounds' value={totalRounds} onChange={(e) => this.handleChange('totalRounds', e.target.value)} />\r\n\r\n          {\r\n            isHost && <Grid container direction='row' justify='flex-end'>\r\n              <Grid item>\r\n                <Button onClick={this.startGame}>Start</Button>\r\n              </Grid>\r\n            </Grid>\r\n            }\r\n\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nRoom.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRouter(Room)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../context'\r\n\r\nconst withRedirectIfNoSession = Comp => {\r\n  class WithRedirectIfNoSession extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    componentDidMount () {\r\n      this.checkSession()\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      this.checkSession()\r\n    }\r\n\r\n    checkSession = () => {\r\n      if (this.context.opponentDisconnected) {\r\n        this.props.history.push('/disconnected')\r\n      }\r\n      if (!this.context.sessionID) {\r\n        this.props.history.push('/')\r\n      }\r\n    }\r\n\r\n    render () {\r\n      return this.context.sessionID ? <Comp {...this.props} /> : null\r\n    }\r\n  }\r\n  WithRedirectIfNoSession.propTypes = {\r\n    history: PropTypes.object\r\n  }\r\n  return WithRedirectIfNoSession\r\n}\r\n\r\nexport default withRedirectIfNoSession\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\nimport Button from '../page/button'\r\n\r\nimport withRedirectIfNoSession from '../../hoc/with-redirect-if-no-session'\r\nimport WordList from './word-list'\r\n\r\nclass Results extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    getAction = () => {\r\n      const { board, actions } = this.context\r\n      if (board.currentRound < board.totalRounds || (board.currentTurn === 'host' && !board.singlePlayer)) {\r\n        return <Button onClick={() => actions.startGame()}>{board.singlePlayer ? 'Next round' : 'My turn'}</Button>\r\n      } else {\r\n        return <Button onClick={this.finishGame}>Finish</Button>\r\n      }\r\n    }\r\n\r\n    finishGame = () => {\r\n      this.context.actions.finishGame()\r\n    }\r\n\r\n    checkRedirect = () => {\r\n      if (this.context.gameStarted) {\r\n        this.props.history.push('/game')\r\n      }\r\n      if (this.context.gameFinshed) {\r\n        this.props.history.push('/finish')\r\n      }\r\n    }\r\n\r\n    componentDidUpdate () {\r\n      this.checkRedirect()\r\n    }\r\n\r\n    componentDidMount () {\r\n      this.checkRedirect()\r\n    }\r\n\r\n    render () {\r\n      const { playerType, board } = this.context\r\n\r\n      const yourTurn = playerType === board.currentTurn\r\n\r\n      return (\r\n        <Fragment>\r\n          <Typography variant='headline' gutterBottom >{yourTurn ? 'Your' : 'Your opponents'} results of round {board.currentRound}</Typography>\r\n          {\r\n            (!yourTurn || board.singlePlayer) && <Grid container direction='row' justify='flex-end' spacing={8}>\r\n              <Grid item>\r\n                {\r\n                  this.getAction()\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n          <WordList fullHeight />\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nResults.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRedirectIfNoSession(withRouter(Results))\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoggleContext from '../../context'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\nimport Button from '../page/button'\r\n\r\nimport { withRouter } from 'react-router'\r\nimport { getWordGrid } from './word-list'\r\n\r\nimport withRedirectIfNoSession from '../../hoc/with-redirect-if-no-session'\r\nimport Gif, { Draw, Win, Lose } from '../page/gif'\r\n\r\nclass Finished extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    render () {\r\n      const { points, pointsOpponent, board, playerType } = this.context\r\n\r\n      const tie = points === pointsOpponent\r\n      const win = points > pointsOpponent\r\n\r\n      return (\r\n        <Fragment>\r\n          <Typography variant='display2' gutterBottom >{tie ? `It's a tie!` : win ? 'You have won!' : 'You have lost..'}</Typography>\r\n\r\n          <Typography variant='display1' gutterBottom >{points} points</Typography>\r\n\r\n          <Gif src={tie ? Draw : win ? Win : Lose} />\r\n\r\n          <Grid container direction='row' justify='flex-end' spacing={8} style={{ marginTop: 12 }}>\r\n            <Grid item>\r\n              <Button onClick={() => this.props.history.push('/scores')}>To score board</Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={() => this.props.history.push('/')}>Menu</Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={8}>\r\n            {\r\n              board.previousRounds.filter(round => round.playerType === playerType).map(round =>\r\n                getWordGrid(round.guessedWords, round.goodWords)\r\n              )\r\n            }\r\n          </Grid>\r\n        </Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nFinished.propTypes = {\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default withRedirectIfNoSession(withRouter(Finished))\r\n","import React, { Fragment } from 'react'\r\n\r\nimport BoggleContext from '../../context'\r\nimport { getS } from '../../helpers'\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nimport { Typography, Grid, Divider } from '@material-ui/core'\r\nimport Loader from '../page/loader'\r\n\r\nclass Room extends React.Component {\r\n    static contextType = BoggleContext\r\n\r\n    componentDidMount () {\r\n      this.context.actions.getScores()\r\n    }\r\n\r\n    getTopThree = scores => {\r\n      const result = []\r\n      scores.forEach(score => {\r\n        result.push({ name: score.hostName, points: score.host })\r\n        if (score.player) {\r\n          result.push({ name: score.playerName, points: score.player })\r\n        }\r\n      })\r\n      \r\n      return result.sort((a, b) => b.points - a.points).slice(0, 3)\r\n    }\r\n\r\n    render () {\r\n      const { scores } = this.context\r\n      const sortedScores = scores && scores.sort((a, b) => Math.max(b.host || 0, b.player || 0) - Math.max(a.host || 0, a.player || 0)) \r\n      return (\r\n        <div>\r\n          <Typography style={{ marginBottom: 4 }} variant='h4'>Best bogglers in the world 🌎</Typography>\r\n          <Typography style={{ marginBottom: 12 }} variant='subheading'>(The number one gets free cake at the end)</Typography>\r\n          <Divider />\r\n          {\r\n            sortedScores && <Grid container spacing={8} style={{ marginTop: 12 }}>\r\n              {\r\n                this.getTopThree(sortedScores).map((score, i) => <Fragment>\r\n                  <Grid key={i} item xs={1}/>\r\n                 <Grid key={i} item xs={2}><Typography style={{ float: 'left' }} variant='headline'>{i === 0 ? '1st. 🏆\\t' : i === 1 ? '2nd.🥈\\t' : i === 2 ? '3th.  🥉\\t' : ''}</Typography></Grid>\r\n                 <Grid key={i} item xs={6}><Typography style={{ float: 'left' }} variant='headline'>{score.name}</Typography></Grid>\r\n                 <Grid key={i} item xs={3}><Typography style={{ float: 'left', fontWeight: 'bold' }} variant='title'>{score.points}</Typography></Grid>\r\n                </Fragment>)\r\n              }\r\n            </Grid>\r\n          }\r\n          <Divider />\r\n          <Typography style={{ marginTop: 60, marginBottom: 24 }} variant='h4'>Overall scores</Typography>\r\n          <Divider />\r\n          {\r\n            !scores || scores.length === 0 ? <Loader /> : sortedScores.map((score, i) => <Fragment key={i}>\r\n              <Grid container spacing={8} style={{ marginTop: 12 }}>\r\n                <Grid item xs={12}>\r\n                  <Typography variant='headline' style={ score.player > score.host ? {textDecoration: 'line-through'} : {}} gutterBottom >{score.hostName}: {score.host} point{getS(score.host)}</Typography>\r\n                </Grid>\r\n                {\r\n                  score.player && <Grid item xs={12}>\r\n                    <Typography variant='headline' style={ score.host > score.player ? {textDecoration: 'line-through'} : {}} gutterBottom >{score.playerName}: {score.player} point{getS(score.player)}</Typography>\r\n                  </Grid>\r\n                }\r\n              </Grid>\r\n              <Divider />\r\n            </Fragment>\r\n            )\r\n        }\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default withRouter(Room)\r\n","import React from 'react'\r\n\r\nimport HostJoinChoice from './host-join-choice'\r\nimport WaitRoom from './room'\r\nimport JoinRoom from './join'\r\nimport BoggleBoardGame from './boggle-board-game'\r\nimport Disconnected from '../page/disconnected'\r\nimport Settings from './settings'\r\nimport Results from './results'\r\nimport Finished from './finished'\r\nimport Scores from '../scores'\r\n\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport { Card, CardContent } from '@material-ui/core'\r\n\r\nclass Game extends React.Component {\r\n  render () {\r\n    return (\r\n      <Router basename='/boggle'>\r\n        <Card>\r\n          <CardContent>\r\n            <Route path='/' exact component={HostJoinChoice} />\r\n            <Route path='/room' exact component={WaitRoom} />\r\n            <Route path='/join' exact component={JoinRoom} />\r\n            <Route path='/game' exact component={BoggleBoardGame} />\r\n            <Route path='/settings' exact component={Settings} />\r\n            <Route path='/results' exact component={Results} />\r\n            <Route path='/finish' exact component={Finished} />\r\n            <Route path='/disconnected' exact component={Disconnected} />\r\n            <Route path='/scores' exact component={Scores} />\r\n          </CardContent>\r\n        </Card>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\r\n\r\nimport BoggleContext from './context'\r\nimport Boggle from '../boggle'\r\n\r\nimport BasePage from './components/page/base-page'\r\nimport PageContent from './components/page/page-content'\r\n\r\nimport Game from './components/game'\r\nimport Loader from './components/page/loader'\r\n\r\nclass BoggleProvider extends React.Component {\r\n  constructor () {\r\n    super()\r\n    this.boggle = {}\r\n  }\r\n\r\n    initialState = {\r\n      points: 0,\r\n      connected: false,\r\n      selectedLetters: [],\r\n      pointsOpponent: 0,\r\n      readyToPlay: false\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    getNewBoggleInstance = () => {\r\n      return new Boggle(this.onMessage, () => this.setState({ connected: true }), console.log)\r\n    }\r\n\r\n    componentDidMount () {\r\n      this.setState(this.initialState)\r\n      this.boggle = this.getNewBoggleInstance()\r\n    }\r\n\r\n    onMessage = data => {\r\n      this.setState(data)\r\n    }\r\n\r\n    joinGame = () => {\r\n      this.setState({\r\n        joinGame: true\r\n      })\r\n    }\r\n\r\n    resetContext = () => {\r\n      this.setState(this.initialState)\r\n      this.boggle = this.getNewBoggleInstance()\r\n    }\r\n\r\n    render () {\r\n      const { connected } = this.state\r\n      return (\r\n        <BoggleContext.Provider value={{\r\n                ...this.state,\r\n                actions: this.boggle.actions,\r\n                resetContext: this.resetContext\r\n            }}>\r\n          <BasePage>\r\n            <PageContent>\r\n              { !connected ? <Loader /> : <Game /> }\r\n            </PageContent>\r\n          </BasePage>\r\n        </BoggleContext.Provider>\r\n      )\r\n    }\r\n}\r\n\r\nexport default BoggleProvider\r\n","import React from 'react'\r\n\r\nimport Boggle from './modules/boggle-react'\r\n\r\n// window.onbeforeunload = function () {\r\n//   return 'the Game will be ended if you leave this page, are you sure?'\r\n// }\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <Boggle />\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}